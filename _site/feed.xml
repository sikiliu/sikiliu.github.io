<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>“SikiLiu's Blog” - Articles</title>
		<description>Everything about SiKiLiu.</description>
		<link>http://sikiliu.github.io</link>
		<atom:link href="http://sikiliu.github.io/feed.articles.xml" rel="self" type="application/rss+xml" />
		
			
			<item>
				<title>一个int的binary中1的num</title>
				
					<description>&lt;h2&gt;一、 Quick Func&lt;/h2&gt;

&lt;p&gt;int BitCount2(unsigned int n)
{
    unsigned int c =0 ;
    for (c =0; n; ++c)
    {
        n &amp;amp;= (n -1) ; // 清除最低位的1
    }
    return c ;
}
为什么呢？Assume 110011101 是我们需要count的binary,那么他减去1就是110011100,
(n)111110           110011101
(n-1)111101         110011100
上面两个栗子，当减1的时候是去消费最右侧最低1位非0的1的个数；&lt;/p&gt;
</description>
				
				<pubDate>Thu, 23 Mar 2017 00:00:00 +0800</pubDate>
				<link>http://sikiliu.github.io/count-bits</link>
				<guid isPermaLink="true">http://sikiliu.github.io/count-bits</guid>
			</item>
			
		
			
			<item>
				<title>Go 线程处理</title>
				
					<description>&lt;h2&gt;一、  基础知识&lt;/h2&gt;

&lt;p&gt;goroutine不同于thread，threads是操作系统中的对于一个独立运行实例的描述，不同操作系统，对于thread的实现也不尽相同；但是，操作系统并不知道goroutine的存在，goroutine的调度是有Golang运行时进行管理的。启动thread虽然比process所需的资源要少，但是多个thread之间的上下文切换仍然是需要大量的工作的（寄存器/Program Count/Stack Pointer/...），Golang有自己的调度器，许多goroutine的数据都是共享的，因此goroutine之间的切换会快很多，启动goroutine所耗费的资源也很少，一个Golang程序同时存在几百个goroutine是很正常的。&lt;/p&gt;
</description>
				
				<pubDate>Thu, 16 Mar 2017 00:00:00 +0800</pubDate>
				<link>http://sikiliu.github.io/go-chan</link>
				<guid isPermaLink="true">http://sikiliu.github.io/go-chan</guid>
			</item>
			
		
			
			<item>
				<title>我爱狗哥</title>
				
					<description>&lt;h2&gt;一、  狗哥&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://cdn-qn0.jianshu.io/assets/web/logo-58fd04f6f0de908401aa561cda6a0688.png&quot; alt=&quot;五环&quot; /&gt;&lt;/p&gt;
</description>
				
				<pubDate>Mon, 13 Mar 2017 00:00:00 +0800</pubDate>
				<link>http://sikiliu.github.io/BigDogBrother-test</link>
				<guid isPermaLink="true">http://sikiliu.github.io/BigDogBrother-test</guid>
			</item>
			
		
			
			<item>
				<title>中国摇滚的落寞与喧嚣</title>
				
					<description>&lt;h2&gt;生于一无所有&lt;/h2&gt;
</description>
				
				<pubDate>Tue, 03 Dec 2013 00:00:00 +0800</pubDate>
				<link>http://sikiliu.github.io/chinese-rock-upndown</link>
				<guid isPermaLink="true">http://sikiliu.github.io/chinese-rock-upndown</guid>
			</item>
			
		
	</channel>
</rss>

